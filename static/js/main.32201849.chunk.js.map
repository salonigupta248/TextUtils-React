{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","style","height","width","cursor","role","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","replace","navigator","clipboard","writeText","split","join","filter","element","defaultProps","about","Alert","alert","word","lower","charAt","slice","capitalize","msg","About","myStyle","border","borderColor","data-bs-parent","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","BrowserRouter","cls","document","body","classList","remove","add","Routes","Route","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.32201849.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n          </li>\r\n          \r\n        </ul>\r\n        {/*<form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n  </form> */}\r\n  <div className=\"d-flex\">\r\n    <div className=\"bg-primary rounded mx-2\" onClick={()=> props.toggleMode('primary')} style={{height: '25px',width: '25px', cursor: 'pointer'}}></div>\r\n    <div className=\"bg-danger rounded mx-2\" onClick={()=> props.toggleMode('danger')} style={{height: '25px',width: '25px', cursor: 'pointer'}}></div>\r\n    <div className=\"bg-success rounded mx-2\" onClick={()=> props.toggleMode('success')} style={{height: '25px',width: '25px', cursor: 'pointer'}}></div>\r\n    <div className=\"bg-warning rounded mx-2\" onClick={()=> props.toggleMode('warning')} style={{height: '25px',width: '25px', cursor: 'pointer'}}></div>\r\n\r\n  </div>\r\n  <div className={`form-check form-switch text-${props.mode === 'light'? 'dark' : 'light'}`}>\r\n  <input className=\"form-check-input\" onClick={()=> {props.toggleMode(null)}} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Toggle Mode</label>\r\n  </div>\r\n     </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                    about: PropTypes.string.isRequired}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    about: 'about text here'\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        console.log(\"uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to uppercase!\", \"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        console.log(\"lowercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to lowercase!\", \"success\");\r\n\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"on change\");\r\n        setText(event.target.value)\r\n\r\n    }\r\n    const handleClearClick = (event)=>{\r\n        setText(\"\")\r\n        props.showAlert(\"the text is cleared!\", \"success\");\r\n\r\n    }\r\n    const handleReplaceClick = (event)=>{\r\n        setText(text.replace(\" \",\"\"))\r\n        props.showAlert(\"remove one space!\", \"success\");\r\n\r\n    }\r\n    const handleCopy = ()=>{\r\n       // var text = document.getElementById(\"myBox\");\r\n       // text.select();\r\n        navigator.clipboard.writeText(text);\r\n       // document.getSelection().removeAllRanges();\r\n        props.showAlert(\"copied the text!\", \"success\");\r\n\r\n    }\r\n    const handleExtraSpaces =()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"removed the extra spaces!\", \"success\");\r\n\r\n    }\r\n    const[text, setText] = useState(''); \r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n        <h1 style={{color : props.mode === 'dark'? 'white' : 'black'}}>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\"  value={text} style={{backgroundColor : props.mode === 'dark'? '#13466e' : 'white', color : props.mode === 'dark'? 'white' : 'black'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            \r\n        </div>\r\n        <button disabled={text.length===0} className='btn btn-primary mx-2 my-2' onClick={handleUpClick}>Convert to uppercase</button>\r\n        <button disabled={text.length===0} className='btn btn-primary mx-2 my-2' onClick={handleLoClick}>Convert to lowercase</button>\r\n        <button disabled={text.length===0} className='btn btn-primary mx-2 my-2' onClick={handleClearClick}>Clear text</button>\r\n        <button disabled={text.length===0} className='btn btn-primary mx-2 my-2' onClick={handleReplaceClick}>Remove spaces text</button>\r\n        <button disabled={text.length===0} className='btn btn-primary mx-2 my-2' onClick={handleCopy}>Copy text</button>\r\n        <button disabled={text.length===0} className='btn btn-primary mx-2 my-2' onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n\r\n\r\n    </div>\r\n    <div className=\"container my-3\" style={{color : props.mode === 'dark'? 'white' : 'black'}}>\r\n<h1>Your text summary</h1>\r\n<p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p> \r\n<p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length } Minutes read</p>\r\n<h2>Preview</h2>\r\n<p>{text.length>0?text:\"Nothing to preview\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n    { props.alert && < div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n<strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from 'react'\r\n\r\nexport default function About(props) {\r\n    \r\n    //const [myStyle, setmyStyle] = useState( {\r\n    //  color: 'black',\r\n    //  backgroundColor: 'white',\r\n    //  border: '2px solid white'\r\n    \r\n    let myStyle = {\r\n      color: props.mode ==='dark'?'white':'#042743',\r\n      backgroundColor: props.mode === 'dark'?'rgb(36 74 104)':'white',\r\n      border: '0.5px solid',\r\n      borderColor:props.mode === 'dark'?'white':'#042743'\r\n    }\r\n  return (\r\n    <div className=\"container\" style={{color: props.mode ==='dark'?'white':'#042743'}}> \r\n    <h2>About Us</h2>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" style={myStyle}>\r\n      <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                Analyze your Text      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>TextUtils gives you a way to analyze your text quickly and efficicently.Be it word count,character count or anything.</strong> \r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" style={myStyle}>\r\n      <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Free to Use\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" style={myStyle} data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>TextUtils is a free character counter tool that provides instant character count and word count statistics for a given text. Textutils reports the number of words and characters. Thus it is suitable for writing text with word/character limit.</strong> \r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\">\r\n      <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Browser Compatible\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This word counter software works in any web browser such as Chrome, Firefox, Internet Explorer, Safari, Opera.It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.</strong> \r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  }\n  const removeBodyClasses = () => {\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-dark')\n    document.body.classList.remove('bg-warning')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-success')\n  }\n\n  const toggleMode = (cls) => {\n    removeBodyClasses();\n    console.log(cls)\n    document.body.classList.add('bg-' + cls)\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#041f38';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      //document.title = 'TextUtils - Dark Mode';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n\n\n    }\n  }\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar\n          title=\"TextUtils2\"\n          aboutText=\"TextAbouts\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-4\" mode={mode}>\n          <Routes>\n            <Route exact path=\"/about\" element={<About mode={mode} />}></Route>\n            <Route\n              exact path=\"/\"\n              element={\n                <TextForm\n                  showAlert={showAlert}\n                  heading=\"Try TextUtils - Word Counter,Character Counter,Remove Extra Spaces\"\n                  mode={mode} \n                />\n              }\n            ></Route>\n          </Routes>\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}